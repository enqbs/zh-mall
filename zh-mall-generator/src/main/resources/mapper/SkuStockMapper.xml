<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.enqbs.generator.dao.SkuStockMapper">
  <resultMap id="BaseResultMap" type="com.enqbs.generator.pojo.SkuStock">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sku_id" jdbcType="INTEGER" property="skuId" />
    <result column="actual_stock" jdbcType="INTEGER" property="actualStock" />
    <result column="lock_stock" jdbcType="INTEGER" property="lockStock" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="delete_status" jdbcType="INTEGER" property="deleteStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>

  <sql id="Base_Column_List">
    id, sku_id, actual_stock, lock_stock, stock, delete_status, create_time, update_time
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_sku_stock
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectBySkuId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_sku_stock
    where sku_id = #{skuId,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_sku_stock
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.enqbs.generator.pojo.SkuStock">
    insert into tb_sku_stock (id, sku_id, actual_stock,
                              lock_stock, stock, delete_status,
                              create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{skuId,jdbcType=INTEGER}, #{actualStock,jdbcType=INTEGER},
            #{lockStock,jdbcType=INTEGER}, #{stock,jdbcType=INTEGER}, #{deleteStatus,jdbcType=INTEGER},
            #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>

  <insert id="insertSelective" parameterType="com.enqbs.generator.pojo.SkuStock">
    insert into tb_sku_stock
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="skuId != null">
        sku_id,
      </if>
      <if test="actualStock != null">
        actual_stock,
      </if>
      <if test="lockStock != null">
        lock_stock,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="deleteStatus != null">
        delete_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="skuId != null">
        #{skuId,jdbcType=INTEGER},
      </if>
      <if test="actualStock != null">
        #{actualStock,jdbcType=INTEGER},
      </if>
      <if test="lockStock != null">
        #{lockStock,jdbcType=INTEGER},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="deleteStatus != null">
        #{deleteStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.enqbs.generator.pojo.SkuStock">
    update tb_sku_stock
    <set>
      <if test="skuId != null">
        sku_id = #{skuId,jdbcType=INTEGER},
      </if>
      <if test="actualStock != null">
        actual_stock = #{actualStock,jdbcType=INTEGER},
      </if>
      <if test="lockStock != null">
        lock_stock = #{lockStock,jdbcType=INTEGER},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="deleteStatus != null">
        delete_status = #{deleteStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.enqbs.generator.pojo.SkuStock">
    update tb_sku_stock
    set sku_id = #{skuId,jdbcType=INTEGER},
        actual_stock = #{actualStock,jdbcType=INTEGER},
        lock_stock = #{lockStock,jdbcType=INTEGER},
        stock = #{stock,jdbcType=INTEGER},
        delete_status = #{deleteStatus,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectListBySkuIdSet" parameterType="java.util.Set" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_sku_stock
    where sku_id in
    <foreach collection="skuIdSet" item="item" index="index" open="(" close=")" separator=",">
      #{item,jdbcType=INTEGER}
    </foreach>
  </select>

  <update id="batchUpdateBySkuStockListLockStock" parameterType="java.util.List">
    update `tb_sku_stock`
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="lock_stock = case" suffix="end,">
        <foreach collection="stockList" item="item" index="index">
          <if test="item.lockStock != null">
            when `id` = #{item.id,jdbcType=INTEGER} then `lock_stock` + #{item.lockStock,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="stock = case" suffix="end,">
        <foreach collection="stockList" item="item" index="index">
          <if test="item.stock != null">
            when `id` = #{item.id,jdbcType=INTEGER} then `stock` - #{item.stock,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
    </trim>
    where `id` in
    <foreach collection="stockList" item="item" index="index" open="(" close=")" separator=",">
      #{item.id,jdbcType=INTEGER}
    </foreach>
    <foreach collection="stockList" item="item" index="index">
      and `stock` >= #{item.stock,jdbcType=INTEGER}
    </foreach>
  </update>

  <update id="batchUpdateBySkuStockListUnLockStockRollback" parameterType="java.util.List">
    update `tb_sku_stock`
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="lock_stock = case" suffix="end,">
        <foreach collection="stockList" item="item" index="index">
          <if test="item.lockStock != null">
            when `id` = #{item.id,jdbcType=INTEGER} then `lock_stock` - #{item.lockStock,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="stock = case" suffix="end,">
        <foreach collection="stockList" item="item" index="index">
          <if test="item.stock != null">
            when `id` = #{item.id,jdbcType=INTEGER} then `stock` + #{item.stock,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
    </trim>
    where `id` in
    <foreach collection="stockList" item="item" index="index" open="(" close=")" separator=",">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>

  <update id="batchUpdateBySkuStockListUnLockStockDelete" parameterType="java.util.List">
    update `tb_sku_stock`
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="actual_stock = case" suffix="end,">
        <foreach collection="stockList" item="item" index="index">
          <if test="item.actualStock != null">
            when `id` = #{item.id,jdbcType=INTEGER} then `actual_stock` - #{item.actualStock,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="lock_stock = case" suffix="end,">
        <foreach collection="stockList" item="item" index="index">
          <if test="item.lockStock != null">
            when `id` = #{item.id,jdbcType=INTEGER} then `lock_stock` - #{item.lockStock,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="stock = case" suffix="end,">
        <foreach collection="stockList" item="item" index="index">
          <if test="item.stock != null">
            when `id` = #{item.id,jdbcType=INTEGER} then `stock` - #{item.stock,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
    </trim>
    where `id` in
    <foreach collection="stockList" item="item" index="index" open="(" close=")" separator=",">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
</mapper>
